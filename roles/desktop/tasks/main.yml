---
- name: Add repository keys by ID
  apt_key: keyserver=keyserver.ubuntu.com id='{{ item }}'
  become: yes
  with_items:
    - 9CFAF7EB # fman

- name: Add repository keys by URL
  apt_key: state=present url='{{ item }}'
  become: yes
  with_items:
    - https://syncthing.net/release-key.txt
    # ppa:aslatter/ppa
    - 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3A160895CC2CE253085D08A552B24DF7D43B5377'

- name: Add repositories
  apt_repository: repo='{{ item }}' mode=0644
  register: ppa
  become: yes
  with_items:
    - 'deb [arch=amd64] https://fman.io/updates/ubuntu/ stable main'
    - 'deb https://apt.syncthing.net/ syncthing stable'
    # ppa:aslatter/ppa -- alacritty
    - 'ppa:aslatter/ppa'

- name: Update package cache
  apt: update_cache=yes
  become: yes
  when: ppa.changed

- name: Install GUI applications via apt
  become: yes
  apt:
    name:
      - alacritty
      - filezilla
      - firefox
      - fonts-firacode
      - fman
      - gimp
      - git-gui
      - gitg
      - keepassxc
      - mpv
      - oneko
      - peek
      - qalculate-gtk
      - redshift
      - remmina
      - sox # to generate white noise!
      - syncthing
      - syncthing-gtk
      - vim-gtk3 # to enable +clipboard in vim for kitty scrollback
      - webp
      - wireshark
      - xsel
      - zeal

- name: Ensure directories exist
  file: path={{ item }} state=directory mode=0755
  with_items:
    - ~/.config/alacritty
    - ~/.config/fontconfig
    - ~/.config/fman/Local
    - ~/.config/fman/Plugins/User/Settings
    - ~/.config/mpv

- name: Symlink dotfiles
  file:
    src: "{{ role_path}}/files/{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - { src: 'alacritty/alacritty.yml', dest: '~/.config/alacritty/alacritty.yml' }
    - { src: 'alacritty/dracula.yml', dest: '~/.config/alacritty/dracula.yml' }

    - { src: 'fman/Dialogs.json', dest: '~/.config/fman/Local/Dialogs.json' }
    - { src: 'fman/Settings/Apps (Linux).json', dest: '~/.config/fman/Plugins/User/Settings/Apps (Linux).json' }
    - { src: 'fman/Settings/Core Settings (Linux).json', dest: '~/.config/fman/Plugins/User/Settings/Core Settings (Linux).json' }
    - { src: 'fman/Settings/File Associations (Linux).json', dest: '~/.config/fman/Plugins/User/Settings/File Associations (Linux).json' }
    - { src: 'fman/Settings/Key Bindings (Linux).json', dest: '~/.config/fman/Plugins/User/Settings/Key Bindings (Linux).json' }

    - { src: 'mpv/input.conf', dest: '~/.config/mpv/input.conf' }

- name: Copy default config if needed
  copy:
    src: "{{ role_path}}/files/{{ item.src }}"
    dest: "{{ item.dest }}"
    force: no
  loop:
    - { src: 'fontconfig/fonts.conf', dest: '~/.config/fontconfig/fonts.conf' }
