set $mod Mod4
set $font {{ font.face | d('monospace') }}
set $fontSize {{ font.size | d(11) }}
set $terminal {{ utilities.terminal | d('alacritty') }}

# Lock application
set $lock xscreensaver-command -l
# Wallpaper application
set $fehbg feh --bg-scale ~/.wallpaper

# Font for window titles
font pango:$font $fontSize

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $terminal

# kill focused window
bindsym $mod+x kill

# character picker using rofi: https://github.com/fdw/rofimoji
# requires rofi, xdotool
bindsym $mod+u exec rofimoji

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# resize focused window
bindsym $mod+Ctrl+h resize shrink width 10px or 5ppt
bindsym $mod+Ctrl+j resize grow height 10px or 5ppt
bindsym $mod+Ctrl+k resize shrink height 10px or 5ppt
bindsym $mod+Ctrl+l resize grow width 10px or 5ppt

## enter fullscreen mode for the focused container
bindsym $mod+m fullscreen toggle

# change container layout (stacked, tabbed, split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+minus split v
bindsym $mod+bar split h
bindsym $mod+backslash split h

# toggle tiling / floating
bindsym $mod+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+o focus mode_toggle

# focus the parent container
bindsym $mod+Shift+comma focus parent
bindsym $mod+Shift+period focus child

# switch to workspace
{% for workspace in workspaces: %}
bindsym $mod+{{ loop.index % 10 }} workspace "{{ workspace }}"
{% endfor %}
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+bracketleft workspace prev
bindsym $mod+bracketright workspace next
bindsym $mod+p workspace prev_on_output
bindsym $mod+n workspace next_on_output
bindsym $mod+e exec --no-startup-id i3-empty

# read 1 character and mark the current window with this character
bindsym $mod+period exec i3-input -f "pango:$font $fontSize" -F 'mark %s' -l 1 -P 'Mark: '

# read 1 character and go to the window with the character
bindsym $mod+comma exec i3-goto-mark

# move focused container to workspace
{% for workspace in workspaces: %}
bindsym $mod+Shift+{{ loop.index % 10 }} move container to workspace "{{ workspace }}"
{% endfor %}
bindsym $mod+Shift+Tab move container to workspace back_and_forth
bindsym $mod+Shift+bracketleft move container to workspace prev
bindsym $mod+Shift+bracketright move container to workspace next
bindsym $mod+Shift+p move container to workspace prev_on_output
bindsym $mod+Shift+n move container to workspace next_on_output
bindsym $mod+Shift+e exec --no-startup-id i3-empty move

# launch rofi
bindsym $mod+space exec "rofi -show run"
bindsym $mod+slash exec "rofi -show window"
# printscreen
bindsym $mod+Print exec "scrot 'shot.%Y%m%d.%H%M%S.png' -e 'mv $f ~/Pictures'"
bindsym Print exec "flameshot gui"

# change sound/media settings
bindsym XF86AudioPlay exec --no-startup-id "mpc toggle"
bindsym XF86AudioStop exec --no-startup-id "mpc stop"
bindsym XF86AudioPrev exec --no-startup-id "mpc prev"
bindsym XF86AudioNext exec --no-startup-id "mpc next"
bindsym XF86AudioMute exec --no-startup-id "pactl set-sink-mute @DEFAULT_SINK@ toggle"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -3%"
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +3%"

# Different modes
# Exiting any mode can be done with: Return, Escape, Ctrl+g
# That last one is the effect of permanent Emacs dain bramage ^_^

# i3/system menu
# h/t https://thevaluable.dev/window-manager-mouseless-i3/
set $mode_system "i3: [l]ock • [r]eload • [Pause] suspend • [BkSp] exit • [S-BkSp] pwroff • [C-BkSp] reboot"
mode $mode_system {
	# Locks i3
	bindsym l exec --no-startup-id $lock, mode "default"
	# Reloads i3 config
        bindsym r exec i3-reload, mode "default"

        # Puts system into suspend (assuming you're infected by systemd)
	bindsym Pause exec --no-startup-id $lock && systemctl suspend, mode "default"
	bindsym Shift+s exec --no-startup-id $lock && systemctl suspend, mode "default"
        # Quits i3
	bindsym BackSpace exec --no-startup-id i3-msg exit
	# Powers the system off (assuming systemd)
        bindsym Shift+BackSpace exec --no-startup-id systemctl poweroff -i
	# Reboots the system (assuming systemd)
        bindsym Ctrl+BackSpace exec --no-startup-id systemctl reboot -i

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Ctrl+g mode "default"
}
bindsym $mod+Escape mode $mode_system

# change sound/media settings... for keyboards that don't have media keys
# lookin' atcha, Thinkpad X260 >.<
set $mode_sound "SOUND:  play/pause •  stop •  prev •  next • [-] vol.dn • [+] vol.up • [BkSp] mute"
mode $mode_sound {
	bindsym Up exec --no-startup-id "mpc stop", mode "default"
	bindsym Down exec --no-startup-id "mpc toggle", mode "default"
	bindsym Left exec --no-startup-id "mpc prev"
	bindsym Right exec --no-startup-id "mpc next"

	bindsym p exec --no-startup-id "mpc prev"
	bindsym n exec --no-startup-id "mpc next"
	bindsym space exec --no-startup-id "mpc toggle", mode "default"
	bindsym slash exec --no-startup-id "mpd-queue-search", mode "default"

	bindsym BackSpace exec --no-startup-id "pactl set-sink-mute @DEFAULT_SINK@ toggle", mode "default"
        bindsym minus exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -3%"
        bindsym equal exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +3%"
        bindsym Shift+equal exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +3%"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Ctrl+g mode "default"
}
bindsym $mod+z mode $mode_sound

# a "launcher" mode to kick off commonly used utilities
set $mode_launcher "LAUNCH: [b]g [e]m [f]man [g]fx [k]bd [m]usic [n]eko [p]ass [r]etroarch [w]eb"
mode $mode_launcher {
	bindsym b exec --no-startup-id $fehbg, mode "default"
	bindsym e exec "em", mode "default"
	bindsym f exec "fman", mode "default"
	bindsym g exec "gimp", mode "default"
	bindsym k exec --no-startup-id "setxkbmap -option ctrl:swapcaps,compose:ralt", mode "default"
	bindsym m exec "cantata", mode "default"
	bindsym n mode $mode_cat
	bindsym p exec "keepassxc", mode "default"
	bindsym r exec "retroarch", mode "default"
	bindsym w exec "sensible-browser", mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Ctrl+g mode "default"
}
bindsym $mod+semicolon mode $mode_launcher

# purely a silly toy; a cat chases your cursor around (until you kill it...)
# this menu is bound underneath $mode_launcher
set $mode_cat "(=^ ◡ ^=): [i]nu • [n]eko • [T]ora-neko • [s]akura • [t]omoyo • [k]ill (O.o)"
mode $mode_cat {
	bindsym i exec "oneko -dog", mode "default"
	bindsym n exec "oneko", mode "default"
	bindsym Shift+t exec "oneko -tora", mode "default"
	bindsym s exec "oneko -sakura", mode "default"
	bindsym t exec "oneko -tomoyo", mode "default"
	bindsym k exec "killall oneko", mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Ctrl+g mode "default"
}

# move window, mostly intended for floating windows
set $mode_movement "MOVE: h/ left • j/ down • k/ up • l/ right • [c]enter"
mode $mode_movement {
        bindsym h move left 50 px
        bindsym j move down 50 px
        bindsym k move up 50 px
        bindsym l move right 50 px

        bindsym Left move left 50 px
        bindsym Down move down 50 px
        bindsym Up move up 50 px
        bindsym Right move right 50 px

	bindsym 0 move position 0 0
	bindsym c move position center

        bindsym Ctrl+h resize shrink width 50 px or 10 ppt
        bindsym Ctrl+j resize grow height 50 px or 10 ppt
        bindsym Ctrl+k resize shrink height 50 px or 10 ppt
        bindsym Ctrl+l resize grow width 50 px or 10 ppt

        bindsym Ctrl+Left resize shrink width 50 px or 10 ppt
        bindsym Ctrl+Down resize grow height 50 px or 10 ppt
        bindsym Ctrl+Up resize shrink height 50 px or 10 ppt
        bindsym Ctrl+Right resize grow width 50 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Ctrl+g mode "default"
        bindsym $mod+y mode "default"
}
bindsym $mod+y mode $mode_movement

client.focused {{ colors.focus }} {{ colors.focus }} {{ colors.background }} {{ colors.focus }} {{ colors.focus }}
client.focused_inactive {{ colors.active }} {{ colors.active }} {{ colors.background }} {{ colors.active }} {{ colors.active }}
client.unfocused {{ colors.background }} {{ colors.background }} {{ colors.statusline }} {{ colors.background }} {{ colors.background }}
client.urgent {{ colors.urgent }} {{ colors.urgent }} {{ colors.background }} {{ colors.urgent }} {{ colors.urgent }}
client.placeholder {{ colors.background }} {{ colors.background }} {{ colors.statusline }} {{ colors.separator }} {{ colors.separator }}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	colors {
        	background {{ colors.background }}
        	statusline {{ colors.statusline }}
        	separator {{ colors.separator }}

                focused_workspace {{ colors.background }} {{ colors.background }} {{ colors.focus }}
                active_workspace {{ colors.background }} {{ colors.background }} {{ colors.active }}
                inactive_workspace {{ colors.background }} {{ colors.background }} {{ colors.separator }}
                urgent_workspace {{ colors.background }} {{ colors.background }} {{ colors.urgent }}
        }
	position top
        status_command i3blocks
        strip_workspace_numbers yes
        separator_symbol " • "
        font pango:$font,FontAwesome $fontSize
}

# future window border settings; not compatible with i3 on Ubuntu 18.04
default_border pixel 2
default_floating_border normal

# force settings on specific windows
#for_window [class="Keepassx"] floating enable
#for_window [class="Peek-run"] floating enable
#for_window [class="mpv"] floating enable
#for_window [class="em"] floating enable

# mouse cursor does NOT focus
focus_follows_mouse no

# autostart applications
{% for app in autostart: %}
exec --no-startup-id {{ app }}
{% endfor %}
