#!/bin/bash

MAX_LIMIT=120
PERCENT=5

function get_default_sink_volume {
    # https://unix.stackexchange.com/a/230533
    SINK=$( pactl list short sinks | sed -e 's,^\([0-9][0-9]*\)[^0-9].*,\1,' | head -n 1 )
    VOL_OLD=$( pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,' )
    return $VOL_OLD
}

function usage {
    echo "Usage: $0 [up|down|current|mute|is-muted]"
    exit 1
}

if [ -z "$1" ]; then
    usage
fi

if [ "$1" = "up" ]; then
    get_default_sink_volume
    if [ $? -ge $MAX_LIMIT ]; then
        echo "Cannot go past $MAX_LIMIT%!"
        exit 1
    fi
    pactl set-sink-volume @DEFAULT_SINK@ +$PERCENT%

elif [ "$1" = "down" ]; then
    get_default_sink_volume
    if [ $? -le 0 ]; then
        echo "Cannot go below 0%!"
        exit 1
    fi
    pactl set-sink-volume @DEFAULT_SINK@ -$PERCENT%

elif [ "$1" = "current" ]; then
    get_default_sink_volume
    echo $?

elif [ "$1" = "mute" ]; then
    pactl set-sink-mute @DEFAULT_SINK@ toggle

elif [ "$1" = "is-muted" ]; then
    SINK=$( pactl list short sinks | sed -e 's,^\([0-9][0-9]*\)[^0-9].*,\1,' | head -n 1 )
    pactl list sinks | grep '^[[:space:]]Mute:' | head -n $(( $SINK + 1 )) | tail -n 1 | awk '{print $2}'

else
    usage

fi
