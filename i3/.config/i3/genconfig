#!/usr/bin/env python3

import json
import sys

from jinja2 import Environment, FileSystemLoader, select_autoescape
from os.path import expanduser, exists, split

def generate(template_filename, json_filename):
    json_path = expanduser(json_filename)
    if not exists(json_path):
        print('JSON file does not exist!')
        exit(1)

    conf_path, not_needed = split(expanduser(template_filename))
    env = Environment(
        loader = FileSystemLoader(conf_path, followlinks=True),
        autoescape = select_autoescape([])
    )

    with open(json_path) as fh:
        env.globals = json.load(fh)
        template = env.get_template(template_filename)
        print('# ACHTUNG: This file is automatically generated, please do not edit it!')
        print(template.render())

    fh.close()

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} JINJA2-FILE JSON-FILE")
        print()
        print("This program populates a Jinja2 template file with values from a JSON file.")
        print("It may be useful, for instance, when a program's configuration format is not")
        print("expressive enough for your needs.")
        sys.exit(1)

    generate(sys.argv[1], sys.argv[2])
